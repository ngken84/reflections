Question 1
What happens when you initialize a repository? Why do you need to do it?

When you initialize a repository, git creates a .git directory and starts storing meta data on that 
repository in it. It needs to be done to let git know to start tracking that repository.

Question 2
How is the staging area different from the working directory and the repository? What values do you think it 
offers?

The staging area is kind of a middle ground between the working directory and the repository. It contains
files or file changes that are in the working directory but not yet in the repository. It offers a way to 
group files that will be committed into the repository without having to grab the entire working directory 
or grabbing only one file at a time. 

Question 3
How can you use the staging area to make sure you have one commit per logical change

Use git diff --staged to see the difference between the last commit and the files in the staging area. 

Question 4
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

- Trying experimental features
- Trying diverging solutions
- Tring a separate version

Question 5
How do diagrams help you visualize the branch structure

They help because a long list of branching commits is not easily understood by the human eye. It allows us to know clearly 
when your code diverged into a new branch. 